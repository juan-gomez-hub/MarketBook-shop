import { useState, useEffect } from "react";
import validationAccount from "../utils/validationAccount";
import ValidationInput from "./validationInput"

async function fetchSendCode(email) {

  try {
    const response = await fetch("http://localhost:5000/api/accountManager/forgotAccount/sendCode",
      {
        method: "POST",
        headers: { "Content-type": "Application/json" },
        body: JSON.stringify({ "email": email })
      }
    )
    return response
    //if (!response.ok) {
    //  const json = await response.json()
    //  if(json.errorCode==1002){
    //    setIsValid(false)
    //    setValidation({email:'El mail ingresado no existe en el sistema'})
    //  }
    //}else{
    //  setCodeSended(true)
    //}
  } catch (error) {
    console.log(error)
  }
}

export default function() {

  const [codeSended, setCodeSended] = useState(false)
  const { values, setValues, validation, setValidation, setIsValid, isValid } = validationAccount({ email: null }, { email: true })
  //const result = fetchSendCode(values.email)
  const getCode = async (email) => {
    const result = await fetchSendCode(email)
    if (!result.ok) {
      const json = await result.json()
      if (json.errorCode == 1002) {
        setIsValid(false)
        setValidation({ email: 'El mail ingresado no existe en el sistema' })
      }
    } else {
      setCodeSended(true)
    }
  }
  if (codeSended) {
    return (
      <>
        <h1>Hemos enviado el codigo de recuperación a tu correo</h1>
        <ValidationInput
          placeholder="ingrese el codigo"
          type="email"
          onChange={(val) => {
            setValues((prev) => ({ ...prev, email: val }))
          }}
          error={validation.email} />
        <input class="bg-indigo-600 text-white font-bold rounded-md hover:bg-indigo-700 hover:cursor-pointer w-full disabled:bg-gray-500 disabled:hover:cursor-default"
          type="submit"
          value="Recuperar contraseña"
          disabled={!isValid}
        />
      </>
    )
  }
  else {
    return (
      <>
        <form onSubmit={(e) => { e.preventDefault(); getCode(values.email) }}>
          <ValidationInput
            placeholder="ingrese el email"
            type="email"
            onChange={(val) => {
              setValues((prev) => ({ ...prev, email: val }))
            }}
            error={validation.email} />
          <input class="bg-indigo-600 text-white font-bold rounded-md hover:bg-indigo-700 hover:cursor-pointer w-full disabled:bg-gray-500 disabled:hover:cursor-default"
            type="submit"
            value="Recuperar contraseña"
            disabled={!isValid}
          />
        </form>
      </>
    )
  }
}
